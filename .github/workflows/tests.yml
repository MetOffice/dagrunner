name: Pull Request Tests

on: [pull_request]

jobs:
  test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest

    steps:
      # SETUP

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}  # Ensure branch is checked out, not detached state (so we can push a commit later)
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Add checkout directory to PYTHONPATH
        run: echo "PYTHONPATH=$(pwd):$PYTHONPATH" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          pip install .[tests,dev]
          pip uninstall dagrunner -y

      # TESTS (inc. test coverage)

      - name: Run pytest + coverage report gen
        run: pytest --cov=dagrunner --cov-report=term --cov-report=xml

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      # PRE-COMMIT

      - name: Python interpreter version sha (PYSHA)
        run: echo "PYSHA=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Cache pre-commit
        uses: actions/cache@v3
        id: pre-commit-cache
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PYSHA }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: pre-commit install
        if: steps.pre-commit-cache.outputs.cache-hit != 'true'
        run: |
          pre-commit install

      - name: pre-commit run
        run: |
          pre-commit run --all-files

      # DOCUMENTATION

      - name: Build documentation
        run: |
          ./docs/gen_docs dagrunner ./docs

      - name: Check if documentation has changed
        id: check-docs
        run: |
          git diff --quiet --exit-code || echo "::set-output name=changed::true"

      # https://github.com/orgs/community/discussions/26560#discussioncomment-3531273
      - name: Commit and push documentation changes
        if: steps.check-docs.outputs.changed == 'true'
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git commit -am "Automated reference documentation update for PR ${{ github.event.number }} [skip ci]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}